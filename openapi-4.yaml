openapi: 3.0.3
info:
  title: HealthHarbour API
  version: 1.0.0
paths:
  /api/user/{userId}:
    get:
      tags:
        - User
      summary: Get data from FHIR
      operationId: getFihrData
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFhirData' 
  /api/observation:
    post:
      tags:
        - Observation
      summary: Save observations
      operationId: addObservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observations'
        required: true
      responses:
        '200':
          description: Successful operation
  /api/observation/{userId}:
    get:
      tags:
        - Observation
      summary: Get users observations
      operationId: getObservations
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservationArray'         
  /api/observation/{userId}/result:
    get:
      tags:
        - Observation
      summary: Get users observations result
      operationId: getObservationResult
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObservationResult'         
  /api/care-plan:
    post:
      tags:
        - Care plan
      summary: Save care plan
      operationId: addCarePlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarePlans'
      responses:
        '200':
          description: successful operation
  /api/care-plan/{userId}:
    get:
      tags:
        - Care plan
      summary: Get users care plans
      operationId: getCarePlans
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarePlanArray' 
  /api/care-plan/{userId}/active:
    get:
      tags:
        - Care plan
      summary: Get users care plans activ
      operationId: getCarePlansActive
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarePlanActive' 
  /api/goal:
    post:
      tags:
        - Goal
      summary: Save goal
      operationId: addGoal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goals'
      responses:
        '200':
          description: successful operation
    patch:
      tags:
        - Goal
      summary: Update goal
      operationId: updateGoal
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GoalsPatch'
      responses:
        '200':
          description: successful operation
  /api/goal/{userId}:
    get:
      tags:
        - Goal
      summary: Get goals
      operationId: getGoals
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: isActive
          in: query
          required: false
          schema:
            type: boolean   
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goals'     
  /daily-goal:
    post:
      tags:
        - Daily goal
      summary: Add goal info
      operationId: addGoalInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailyGoal'
      responses:
        '200':
          description: successful operation
  /daily-goal/{userId}:
    get:
      tags:
        - Daily goal
      summary: Get goal info for period
      operationId: getGoalInfoForPeriod
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
        - name: dateFrom
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyGoalPeriod' 
components:
  schemas:
    Observations:
      required:
        - userId
        - observations
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 10
        observations:
          type: array
          items:
            type: number
    ObservationResult:
      required:
          - name
          - code
          - value
          - date
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        value:
          type: string
        date:
          type: string
          format: date
    ObservationArray:
      required:
          - userId
          - observation
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 10
        observations:
          type: string
    CarePlans:
      required:
        - userId
        - careplans
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 10
        careplans:
          type: array
          items:
            type: number
    CarePlanActive:
      required:
          - code
          - activity
          - carePlan
          - start
          - goal
      type: object
      properties:
        code:
          type: string
        activity:
          type: string
        carePlan:
          type: string
        start:
          type: string
          format: date
        goal:
          type: string
    CarePlanArray:
      required:
          - userId
          - carePlan
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 10
        carePlan:
          type: string
    Goals:
      required:
        - id
        - userId
        - name
        - isActive
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        userId:
          type: integer
          format: int64
          example: 10
        name:
          type: string
        isActive:
          type: boolean 
    GoalsPatch:
      required:
        - goalId
        - isActive
      type: object
      properties:
        isActive:
          type: boolean  
        name:
          type: string  
        goalId:
          type: number
    DailyGoal: 
      required:
        - userId
        - goals
        - date
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 10
        goals:
          type: array
          items:
            type: number 
        date:
          type: string
          format: date
    DailyGoalPeriod:
      required:
          - dayOfMonth
          - completedGoals
          - totalActiveGoals
      type: object
      properties:
        dayOfMonth:
          type: integer
          format: int64
          example: 10
        completedGoals:
          type: integer
          example: 2
        totalActiveGoals:
          type: integer
          example: 3
    UserFhirData:
      required:
          - observations
          - carePlans
          - user
      type: object
      properties:
        observations:
            $ref: '#/components/schemas/ObservationsFhir'
        carePlans:
            $ref: '#/components/schemas/CarePlansFhir'
        user:
            $ref: '#/components/schemas/UserFhir'
    ObservationsFhir: 
      items: 
        type: object
        properties: 
          code: 
            type: string
          observation: 
            type: string
    CarePlansFhir: 
      items: 
        type: object
        properties: 
          code: 
            type: string
          careplan: 
            type: string
    UserFhir: 
      properties: 
        gender: 
          type: string
        hame: 
          type: string
        status: 
          type: string
        surname: 
          type: string
        telecom: 
          type: string
        birthDate: 
          type: string
          format: date
  